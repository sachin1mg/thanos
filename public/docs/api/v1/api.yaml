openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:3000/api/v1
info:
  version: '1.0.0'
  title: API Documentation for ODIN Backend
  description: API Documentation for ODIN Backend
  contact:
    email: anubhav.singh@1mg.com
tags:
  - name: Health Check
    description: To check system is up or not
  - name: Material Requests
    description: Material Requests related API's
  - name: Suppliers
    description: Supplier related API's
  - name: Locations
    description: Location related API's
paths:
  /health:
    get:
      tags:
        - Health Check
      summary: Just check application is running
      operationId: checkHealth
      description: |
        Just check application is running
      responses:
        200:
          description: system is up
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    $ref: '#/components/schemas/Health'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
  /material_requests:
    get:
      tags:
        - Material Requests
      summary: Get Material Requests information
      operationId: getMRDetails
      description: |
        Get Material Requests for given filters
        ---
        ---
        1. id => /material_requests?id=3
        2. status => /material_requests?status=pending
        3. created_from => /material_requests?created_from=2018-08-12 (Format - YYYY-MM-DD)
        4. created_to => /material_requests?created_to=2018-08-18 (Format - YYYY-MM-DD)
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Material Requests fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                  - is_success
                  - status_code
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaterialRequest'
                  meta:
                    $ref: '#/components/schemas/Meta'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      parameters:
        - name: id
          in: query
          description: Filter Material Requests by id
          schema:
            type: integer
            format: int32
            example: 21
        - name: status
          in: query
          description: Filter Material Requests by status
          schema:
            type: string
            example: 'pending'
        - name: created_from
          in: query
          description: Filter Material Requests created after the provided date
          schema:
            type: string
            example: '2018-08-12'
        - name: created_to
          in: query
          description: Filter Material Requests created before the provided date
          schema:
            type: string
            example: '2018-08-18'
  /material_requests/{material_request_id}:
    get:
      tags:
        - Material Requests
      summary: Get Material Request information
      operationId: getMRInformation
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Material Request fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/MaterialRequest'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
  /purchase_orders:
      get:
        tags:
          - Purchase Orders
        summary: Get Purchase Orders information
        operationId: getPurchaseOrders
        description: |
          Get Purchase Orders for given filters
          ---
          ---
          1. id => /purchase_orders?id=3
          2. status => /purchase_orders?status=created
          3. created_from => /purchase_orders?created_from=2018-08-12 (Format - YYYY-MM-DD)
          4. created_to => /purchase_orders?created_to=2018-08-18 (Format - YYYY-MM-DD)
        responses:
          400:
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorObject400'
          200:
            description: Purchase Orders fetched successfully
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - data
                    - meta
                    - is_success
                    - status_code
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseOrder'
                    meta:
                      $ref: '#/components/schemas/Meta'
                    is_success:
                      type: boolean
                      example: true
                    status_code:
                      type: string
                      example: 200
        parameters:
          - name: id
            in: query
            description: Filter Purchase Orders by id
            schema:
              type: integer
              format: int32
              example: 21
          - name: status
            in: query
            description: Filter Purchase Orders by status
            schema:
              type: string
              example: 'pending'
          - name: supplier_name
            in: query
            description: Filter Purchase Orders by supplier name
            schema:
              type: string
              example: 'name'
          - name: created_from
            in: query
            description: Filter Purchase Orders created after the provided date
            schema:
              type: string
              example: '2018-08-12'
          - name: created_to
            in: query
            description: Filter Purchase Orders created before the provided date
            schema:
              type: string
              example: '2018-08-18'
  /purchase_orders/{purchase_order_id}:
    get:
      tags:
        - Purchase Orders
      summary: Get Purchase Orders information
      operationId: getPOInformation
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Purchase Order fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/PurchaseOrder'
                  meta:
                    $ref: '#/components/schemas/Meta'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
    put:
      tags:
        - Purchase Orders
      summary: Update Purchase Orders status
      operationId: putPOStatus
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Purchase Order updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/PurchaseOrder'
                  meta:
                    $ref: '#/components/schemas/Meta'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      requestBody:
        $ref: '#/components/requestBodies/PurchaseOrder'
  /suppliers:
    get:
      tags:
        - Suppliers
      summary: Get Suppliers Information
      operationId: getSupplierDetails
      description: |
        Get Suppliers for given filters
        ---
        ---
        1. name => /suppliers?name=han
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Suppliers fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                  - is_success
                  - status_code
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'
                  meta:
                    $ref: '#/components/schemas/Meta'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      parameters:
        - name: name
          in: query
          description: Filter Suppliers by name
          schema:
            type: string
            example: 'han'
    post:
      tags:
        - Suppliers
      summary: Create Supplier based on parameters
      operationId: createSupplier
      description: |
        Create a new supplier based on given parameters.
        ---
        ---
        1. /suppliers
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Suppliers created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Supplier'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      requestBody:
        $ref: '#/components/requestBodies/Supplier'
  /suppliers/{supplier_id}:
    get:
      tags:
        - Suppliers
      summary: Get Supplier Information
      operationId: getSupplierInformation
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Supplier fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Supplier'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
    put:
      tags:
        - Suppliers
      summary: Update Supplier based on parameters
      operationId: updateSupplier
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Supplier updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Supplier'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      requestBody:
        $ref: '#/components/requestBodies/Supplier'
  /locations:
    get:
      tags:
        - Locations
      summary: Get Locations Information
      operationId: getLocationDetails
      description: |
        Get Locations for given filters
        ---
        ---
        1. aisle => /locations?aisle=eum
        2. rack => /locations?rack=eum
        3. slab => /locations?slab=eum
        4. bin => /locations?bin=eum
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Locations fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                  - is_success
                  - status_code
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  meta:
                    $ref: '#/components/schemas/Meta'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      parameters:
        - name: aisle
          in: query
          description: Filter Location by aisle
          schema:
            type: string
            example: 'eum'
        - name: rack
          in: query
          description: Filter Location by rack
          schema:
            type: string
            example: 'eum'
        - name: slab
          in: query
          description: Filter Location by slab
          schema:
            type: string
            example: 'eum'
        - name: bin
          in: query
          description: Filter Location by bin
          schema:
            type: string
            example: 'eum'
    post:
      tags:
        - Locations
      summary: Create Location for current vendor based on parameters
      operationId: createLocation
      description: |
        Create a new location based on given parameters.
        ---
        ---
        1. /locations
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Location created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Location'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      requestBody:
        $ref: '#/components/requestBodies/Location'
  /locations/{location_id}:
    get:
      tags:
        - Locations
      summary: Get Location Information
      operationId: getLocationInformation
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Location fetched successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Location'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
    put:
      tags:
        - Locations
      summary: Update Locations based on parameters
      operationId: updateLocation
      responses:
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        200:
          description: Location updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - is_success
                  - status_code
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Location'
                  is_success:
                    type: boolean
                    example: true
                  status_code:
                    type: string
                    example: 200
      requestBody:
        $ref: '#/components/requestBodies/Location'
  /purchase_receipts:
      get:
        tags:
          - Purchase Receipts
        summary: Get Purchase Receipts information
        operationId: getPRDetails
        description: |
          Get Purchase Receipts for given filters
          ---
          ---
          1. id => /purchase_receipts?id=3
          2. status => /purchase_receipts?status=pending
          3. created_from => /purchase_receipts?created_from=2018-08-12 (Format - YYYY-MM-DD)
          4. created_to => /purchase_receipts?created_to=2018-08-18 (Format - YYYY-MM-DD)
        responses:
          400:
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorObject400'
          200:
            description: Purchase Receipts fetched successfully
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - data
                    - meta
                    - is_success
                    - status_code
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/PurchaseReceipt'
                    meta:
                      $ref: '#/components/schemas/Meta'
                    is_success:
                      type: boolean
                      example: true
                    status_code:
                      type: string
                      example: 200
        parameters:
          - name: id
            in: query
            description: Filter Purchase Receipts by id
            schema:
              type: integer
              format: int32
              example: 21
          - name: status
            in: query
            description: Filter Purchase Receipts by status
            schema:
              type: string
              example: 'pending'
          - name: supplier_name
            in: query
            description: Filter Purchase Receipts by supplier name
            schema:
              type: string
              example: 'name'
          - name: created_from
            in: query
            description: Filter Purchase Receipts created after the provided date
            schema:
              type: string
              example: '2018-08-12'
          - name: created_to
            in: query
            description: Filter Purchase Receipts created before the provided date
            schema:
              type: string
              example: '2018-08-18'
components:
  schemas:
    Health:
      type: object
    Vendor:
      type: object
      required:
        - id
        - name
        - invoice_number_template
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: 'Vendor Name 1'
        status:
          type: string
          enum:
            - active
            - inactive
        invoice_number_template:
          type: string
          example: ada7834n
        created:
          type: string
          example: '2016-06-15 13:39:09.36251'
        updated:
          type: string
          example: '2016-06-15 13:39:09.36251'
        metadata:
          type: object
          example: {}
    MaterialRequest:
      type: object
      required:
        - id
        - sku_id
        - quantity
        - status
        - created_at
        - sku
      properties:
        id:
          type: integer
          format: int32
          example: 56
        sku_id:
          type: integer
          format: int32
          example: 42123
        quantity:
          type: integer
          example: 100
        status:
          type: string
          example: 'pending'
        created_at:
          type: string
          example: '2018-08-17T15:11:14.222+05:30'
        sku:
          type: object
          $ref: '#/components/schemas/Sku'
    PurchaseOrder:
      type: object
      required:
        - id
        - supplier_id
        - supplier_name
        - vendor_id
        - code
        - status
        - type
        - created_at
      properties:
        id:
          type: integer
          format: int32
          example: 56
        supplier_id:
          type: integer
          format: int32
          example: 42123
        supplier_name:
          type: string
          example: 'supplier name'
        vendor_id:
          type: integer
          format: int32
          example: 42
        code:
          type: string
          example: 'code'
        status:
          type: string
          example: 'cancelled'
        type:
          type: string
          example: 'jit'
        created_at:
          type: string
          example: '2018-08-17T15:11:14.222+05:30'
    PurchaseReceipt:
          type: object
          required:
            - id
            - supplier_id
            - supplier_name
            - vendor_id
            - code
            - status
            - total_amount
            - created_at
            - updated_at
          properties:
            id:
              type: integer
              format: int32
              example: 56
            supplier_id:
              type: integer
              format: int32
              example: 42123
            supplier_name:
              type: string
              example: 'supplier name'
            vendor_id:
              type: integer
              format: int32
              example: 42
            code:
              type: string
              example: 'code'
            status:
              type: string
              example: 'cancelled'
            total_amount:
              type: float
              example: 123.5
            created_at:
              type: string
              example: '2018-08-17T15:11:14.222+05:30'
            updated_at:
              type: string
              example: '2018-08-17T15:11:14.222+05:30'
    Sku:
      type: object
      required:
        - id
        - onemg_sku_id
        - sku_name
        - manufacturer_name
        - item_group
        - uom
        - pack_size
      properties:
        id:
          type: integer
          format: int32
          example: 56
        onemg_sku_id:
          type: string
          example: '543-09-9627'
        sku_name:
          type: string
          example: 'Combiflam'
        manufacturer_name:
          type: string
          example: 'Zydus'
        item_group:
          type: string
          example: 'Allopathy'
        uom:
          type: string
          example: 'ml'
        pack_size:
          type: integer
          example: 10
    Supplier:
      type: object
      required:
        - id
        - name
        - status
        - types
        - metadata
        - created_at
      properties:
        id:
          type: integer
          format: int32
          example: 34
        name:
          type: string
          example: 'Cadila Pharmaceuticals'
        status:
          type: string
          example: 'active'
        types:
          type: array
          items:
            type: string
            example: 'one'
        metadata:
          type: object
          example: {}
        created_at:
          type: string
          example: '2018-08-20T15:34:26.678+05:30'
    Location:
      type: object
      required:
        - id
        - vendor_id
        - aisle
        - rack
        - slab
        - bin
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int32
          example: 34
        vendor_id:
          type: integer
          example: 123
        aisle:
          type: string
          example: 'aisle'
        rack:
          type: string
          example: 'rack'
        slab:
          type: string
          example: 'slab'
        bin:
          type: string
          example: 'bin'
        created_at:
          type: string
          example: '2018-08-20T15:38:30.253+05:30'
        updated_at:
          type: string
          example: '2018-08-20T15:38:30.253+05:30'
    Meta:
      type: object
      required:
        - total_pages
        - total_count
      properties:
        total_pages:
          type: integer
          format: int32
          example: 10
        total_count:
          type: integer
          format: int32
          example: 130
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'this is error message'
    Errors:
      type: array
      items:
        $ref: '#/components/schemas/Error'
    ErrorObject400:
      type: object
      required:
        - errors
        - is_success
        - status_code
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
        is_success:
          type: boolean
          example: false
        status_code:
          type: string
          example: 400
  requestBodies:
    PurchaseOrder:
      content:
        application/json:
          schema:
            type: object
            required:
              - purchase_order
            properties:
              purchase_order:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
                    example: 'cancelled'
    Supplier:
      content:
        application/json:
          schema:
            type: object
            required:
              - supplier
            properties:
              supplier:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    example: 'Supplier Name 101'
                  status:
                    type: string
                    example: 'active'
                  types:
                    type: array
                    items:
                      type: string
                      example: 'one'
                  metadata:
                    type: object
                    example: {}
    Location:
      content:
        application/json:
          schema:
            type: object
            required:
              - location
            properties:
              location:
                type: object
                required:
                  - aisle
                  - rack
                  - slab
                  - bin
                properties:
                  aisle:
                    type: string
                    example: 'aisle'
                  rack:
                    type: string
                    example: 'rack'
                  slab:
                    type: string
                    example: 'slab'
                  bin:
                    type: string
                    example: 'bin'
